var e=Object.defineProperty,a=Object.defineProperties,s=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,o=(a,s,r)=>s in a?e(a,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):a[s]=r;import{K as i,V as t,u as d,r as c,j as m,h,t as u,i as p,L as k,M as g,a0 as f,W as b,X as P,E as C,N as _,O as F,F as y,w as j,o as v,d as O,c as V,G as M,H as w,e as A,n as x}from"./vendor.08fb1a9b.js";/* empty css                *//* empty css                     *//* empty css                          *//* empty css                    *//* empty css                 */import"./wangEditor.dcd8f006.js";import"./index.5732baed.js";const E={setup(){const e=i(),k=i(!1),g=i(!0),f=i(null),b=t(),P=d(),{id:C}=b.query,_=c({defaultProps:{children:"sub",label:"name"},id:C,Form:{name:"",checkedMenu:[],checkedPermission:[]},menu_list:[],permission_list:[],rules:{name:[{required:!0,message:"角色必须",trigger:["change"]}],checkedMenu:[{required:!0,message:"菜单必须",trigger:["change"]}],checkedPermission:[{required:!0,message:"权限必须",trigger:["change"]}]}});m((()=>{F(),y(),C&&h.get(`/api/back/roles/${C}`).then((e=>{_.Form={name:e.data.name,checkedMenu:e.data.menu,checkedPermission:e.data.permission}}))}));const F=()=>{h.get("/api/back/menus/list").then((e=>{_.menu_list=e.data}))},y=()=>{h.get("/api/back/permissions").then((e=>{_.permission_list=e.data}))};return j=((e,a)=>{for(var s in a||(a={}))n.call(a,s)&&o(e,s,a[s]);if(r)for(var s of r(a))l.call(a,s)&&o(e,s,a[s]);return e})({},u(_)),a(j,s({roleRef:f,submitAdd:()=>{f.value.validate((e=>{if(console.log(e),e){let e=h.post,a={name:_.Form.name,menu:_.Form.checkedMenu,permission:_.Form.checkedPermission};console.log(a);let s="/api/back/roles";C&&(e=h.put,s=`/api/back/roles/${C}`),e(s,a).then((()=>{p.success(C?"修改成功":"添加成功"),P.push({path:"/role"})}))}}))},tree:e,checkPermissionAll:k,isPermissionIndeterminate:g,handleCheckPermissionAllChange:e=>{e?(_.Form.checkedPermission=[],_.permission_list.forEach((e=>{_.Form.checkedPermission.push(e.id)}))):_.Form.checkedPermission=[],g.value=!1},handleCheckedPermissionsChange:e=>{const a=e.length;k.value=a===_.permission_list.length,g.value=a>0&&a<_.permission_list.length},handleCheckChange:()=>{_.Form.checkedMenu=[],e.value.getCheckedNodes().forEach((e=>{_.Form.checkedMenu.push(e.id)}))}}));var j}},q=A("Check all");E.render=function(e,a,s,r,n,l){const o=k,i=g,t=f,d=b,c=P,m=C,h=_,u=F;return v(),y(u,{style:{"min-height":"100%"}},{default:j((()=>[O(h,{model:e.Form,rules:e.rules,ref:"roleRef","label-width":"100px"},{default:j((()=>[O(i,{label:"角色名",prop:"name"},{default:j((()=>[O(o,{modelValue:e.Form.name,"onUpdate:modelValue":a[0]||(a[0]=a=>e.Form.name=a),placeholder:"请输入账号名称"},null,8,["modelValue"])])),_:1}),O(i,{label:"菜单",prop:"checkedMenu"},{default:j((()=>[O(t,{ref:"tree",data:e.menu_list,"show-checkbox":"","node-key":"id",props:e.defaultProps,"default-checked-keys":e.Form.checkedMenu,onCheckChange:r.handleCheckChange},null,8,["data","props","default-checked-keys","onCheckChange"])])),_:1}),O(i,{label:"权限",prop:"checkedPermission"},{default:j((()=>[O(d,{modelValue:r.checkPermissionAll,"onUpdate:modelValue":a[1]||(a[1]=e=>r.checkPermissionAll=e),indeterminate:r.isPermissionIndeterminate,onChange:r.handleCheckPermissionAllChange},{default:j((()=>[q])),_:1},8,["modelValue","indeterminate","onChange"]),O(c,{modelValue:e.Form.checkedPermission,"onUpdate:modelValue":a[2]||(a[2]=a=>e.Form.checkedPermission=a),onChange:r.handleCheckedPermissionsChange},{default:j((()=>[(v(!0),V(w,null,M(e.permission_list,((e,a)=>(v(),y(d,{key:e.id,label:e.id},{default:j((()=>[A(x(e.name),1)])),_:2},1032,["label"])))),128))])),_:1},8,["modelValue","onChange"])])),_:1}),O(i,null,{default:j((()=>[O(m,{type:"primary",onClick:a[3]||(a[3]=e=>r.submitAdd())},{default:j((()=>[A(x(e.id?"立即修改":"立即创建"),1)])),_:1})])),_:1})])),_:1},8,["model","rules"])])),_:1})};export{E as default};
